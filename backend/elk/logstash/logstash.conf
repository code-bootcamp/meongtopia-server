input{
    jdbc{
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker04"
        jdbc_user => "root"
        jdbc_password => "root"
        schedule => "* * * * *" 
        use_column_value => "true"
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        last_run_metadata_path =>"./lastShop.txt"
        statement => "select *, unix_timestamp(updatedat) as updatedat 
        from store 
        where unix_timestamp(updatedat) > :sql_last_value and deletedat is null 
        order by updatedat asc"
    }

}
# mySQL에서 데이터를 수정하게되면 updateAt시간이 최신으로 바뀌게 되고 결국 ES에 똑같은 이름의데이터가 추가됨.
# 이를 추가가 아닌 수정을 하기 위해서 id를 product_id 즉, uuid로 변경,
#  그러면 해당 uuid는 데이터가 수정되도 변하지 않는 값이기 때문에 ES에서 데이터가 새로 생성이 아닌 덮어쓰기 즉, 수정됨.
filter{
    mutate {
    copy => { "storeid" => "[@metadata][_id]"}
    # remove_field => ["id", "@version", "unix_ts_in_secs"] #해당 코드는 es에서 출력하는 filed의 특정 값이 출력되기를 원하지 않을 때 사용,
    }
}

output{
    elasticsearch{
        document_id => "%{[@metadata][_id]}"
        hosts => "elasticsearch:9200"
        index => "myproduct8"
        manage_template => true
        template => "/usr/share/logstash/template.json"
        template_name => "post"
        template_overwrite => true
    }
}